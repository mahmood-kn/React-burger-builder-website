{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ig","className","classes","ingredient","Order","Number","parseFloat","price","toFixed","Button","type","clicked","delete","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrder","actions","onDeleteHandler","id","withErrorHandling","useEffect","Spinner","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,oFCkC7CC,EA/BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAG9B,IAAMI,EAAoBL,EAAYM,KAAI,SAACC,GAAD,OACxC,uBAAoBC,UAAWC,IAAQC,WAAvC,UACGH,EAAGJ,KADN,KACcI,EAAGH,OADjB,MAAWG,EAAGJ,SAIhB,OACE,sBAAKK,UAAWC,IAAQE,MAAxB,UACE,gCACE,6CAAgBN,KAChB,6CACe,IACb,2CAAcO,OAAOC,WAAWd,EAAMe,OAAOC,QAAQ,YAGzD,8BACE,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASnB,EAAMoB,OAArC,qB,uCCwBOC,uBAnBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMvB,MAAMwB,OACpBC,QAASF,EAAMvB,MAAMyB,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,aAAc,SAACJ,EAAOE,GAAR,OACZC,EAASE,IAAmBL,EAAOE,KACrCI,gBAAiB,SAACC,EAAIT,EAAQE,GAAb,OACfG,EAASE,IAA2BE,EAAIT,EAAQE,QAKvCJ,CAGbY,aA9Ca,SAACjC,GAAW,IACjB6B,EAAgC7B,EAAhC6B,aAAcJ,EAAkBzB,EAAlByB,MAAOE,EAAW3B,EAAX2B,OAC7BO,qBAAU,WACRL,EAAaJ,EAAOE,KACnB,CAACE,EAAcJ,EAAOE,IAEzB,IAAI5B,EAAQ,cAACoC,EAAA,EAAD,IAeZ,OAdKnC,EAAMwB,UACTzB,EAAQC,EAAMuB,OAAOhB,KAAI,SAACR,GAAD,OACvB,cAACa,EAAD,CAEEX,YAAaF,EAAMY,WACnBI,MAAOhB,EAAMgB,MACbiB,GAAIjC,EAAMiC,GACVZ,OAAQ,kBACNpB,EAAM+B,gBAAgBhC,EAAMiC,GAAIhC,EAAMuB,OAAQvB,EAAMyB,SALjD1B,EAAMiC,QAWVjC,IAyBmBqC","file":"static/js/7.f7809c06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1tt0p\",\"ingredient\":\"Order_ingredient__1BWtn\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n  const ingredientsOutput = ingredients.map((ig) => (\r\n    <span key={ig.name} className={classes.ingredient}>\r\n      {ig.name}:({ig.amount})\r\n    </span>\r\n  ));\r\n  return (\r\n    <div className={classes.Order}>\r\n      <div>\r\n        <p>Ingredient: {ingredientsOutput}</p>\r\n        <p>\r\n          Total Price:{' '}\r\n          <strong>USD: {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <Button type='Danger' clicked={props.delete}>\r\n          X\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useEffect } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandling from '../../hoc/withErrorHandling/withErrorHandling';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Orders = (props) => {\r\n  const { onFetchOrder, token, userId } = props;\r\n  useEffect(() => {\r\n    onFetchOrder(token, userId);\r\n  }, [onFetchOrder, token, userId]);\r\n\r\n  let order = <Spinner />;\r\n  if (!props.loading) {\r\n    order = props.orders.map((order) => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredient}\r\n        price={order.price}\r\n        id={order.id}\r\n        delete={() =>\r\n          props.onDeleteHandler(order.id, props.orders, props.token)\r\n        }\r\n      />\r\n    ));\r\n  }\r\n\r\n  return order;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrder: (token, userId) =>\r\n      dispatch(actions.fetchOrder(token, userId)),\r\n    onDeleteHandler: (id, orders, token) =>\r\n      dispatch(actions.deleteOrderHandler(id, orders, token)),\r\n    // autoAuthLogin: () => dispatch(actions.authAutoLogin()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandling(Orders, axios));\r\n"],"sourceRoot":""}